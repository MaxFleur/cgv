#version 430 

uniform layout(binding = 0) sampler3D src_tex;

struct relation {
	ivec2 indices;
	vec4 line_a;
	vec4 line_b;
};

uniform relation relations[6];
uniform ivec2 resolution;
uniform float threshold;

flat out vec4 color_fs;

vec2 to_window_space(in vec2 pos) {
	return 2.0 * (pos/resolution) - 1.0;
}

void main() {
	int idx = gl_VertexID;

	int src_idx = idx/12;
	int rel_idx = (idx/2) % 6;
	ivec3 src_size = textureSize(src_tex, 0);
	ivec3 src_coord;

	src_coord.x = src_idx % src_size.x;
	src_coord.y = (src_idx / src_size.x) % src_size.y;
	src_coord.z = src_idx / (src_size.x * src_size.y);

	vec4 p = vec4(texelFetch(src_tex, src_coord, 0));

	float avg = p[0] + p[1] + p[2] + p[3];
	avg *= 0.25f;

	if (avg > threshold) {
		color_fs = vec4(1.0, 0.0, 0.0, 1.0);//evaluate_transfer_function(p, 1.0);
		
		relation rel = relations[rel_idx];
		vec2 pos;
		if((idx&1) == 0)
			pos = vec2(mix(rel.line_a.xy, rel.line_a.zw, 0.8*p[rel.indices.x] + 0.1));
		else
			pos = vec2(mix(rel.line_b.xy, rel.line_b.zw, 0.8*p[rel.indices.y] + 0.1));
		
		gl_Position = vec4(to_window_space(pos), 0.0, 1.0);
	} else {
		color_fs = vec4(0.0);
		gl_Position = vec4(-2.0, -2.0, 0.0, 1.0);
	}
}
